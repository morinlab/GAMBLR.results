% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_coding_ssm.R
\name{get_coding_ssm}
\alias{get_coding_ssm}
\title{Get Coding SSM.}
\usage{
get_coding_ssm(
  these_samples_metadata = NULL,
  force_unmatched_samples,
  projection = "grch37",
  this_seq_type = "genome",
  basic_columns = TRUE,
  maf_cols = NULL,
  augmented = TRUE,
  min_read_support = 3,
  groups = c("gambl", "icgc_dart"),
  include_silent = TRUE,
  engine,
  verbose = FALSE,
  limit_cohort,
  exclude_cohort,
  limit_pathology,
  limit_samples,
  from_flatfile,
  these_sample_ids
)
}
\arguments{
\item{these_samples_metadata}{Optional (but highly recommended) metadata
table to tell the function how to subset the data. Only sample_id in
this table with the matching seq_type will be in the output. Not all
samples may be in the output, though, if they are missing SSM results
or had no mutations detected.}

\item{force_unmatched_samples}{Optional argument for forcing unmatched
samples, using \link{get_ssm_by_samples}.}

\item{projection}{Reference genome build for the coordinates in the MAF file.
The default is grch37.}

\item{this_seq_type}{The seq_type you want SSMs from, default is genome.}

\item{basic_columns}{Basic columns refers to the first 45 standard MAF
columns. Set this to FALSE if you want all the available columns instead.}

\item{maf_cols}{if basic_columns is set to FALSE, the user can specify
which columns to be returned within the MAF. This parameter can either
be a vector of indexes (integer) or a vector of characters (matching
columns in MAF).}

\item{augmented}{Set to FALSE if you instead want the original MAF from
each sample for multi-sample patients instead of the augmented MAF}

\item{min_read_support}{Only returns variants with at least this many
reads in t_alt_count (for cleaning up augmented MAFs)}

\item{groups}{Deprecated. Use these_samples_metadata instead.}

\item{include_silent}{Logical indicating whether to include
silent mutations in coding regions (i.e. synonymous). Default is TRUE.}

\item{engine}{Deprecated. Ignored}

\item{verbose}{Controls the "verboseness" of this function (and
internally called helpers).}

\item{limit_cohort}{Deprecated. Use these_samples_metadata instead.}

\item{exclude_cohort}{Deprecated. Use these_samples_metadata instead.}

\item{limit_pathology}{Deprecated. Use these_samples_metadata instead.}

\item{limit_samples}{Deprecated. Use these_samples_metadata instead.}

\item{from_flatfile}{Deprecated. Ignored}

\item{these_sample_ids}{Deprecated. Use these_samples_metadata instead.}
}
\value{
A data frame containing all the MAF data columns
(one row per mutation).
}
\description{
Retrieve all coding SSMs from one seq_type in GAMBL
in MAF-like format.
}
\details{
Effectively retrieve simple somatic mutations (SSM) results for
either capture or genome seq_type (but not both at once).
The resulting data frame will be a maf_data object, which tracks the
genome build (projection) for the variants and will have a
maf_seq_type column that tracks the origin seq_type each variant.
In most cases, users should be using the related function that
is able to obtain SSMs across both genome and capture seq_type:
\link{get_all_coding_ssm}
Is this function not what you are looking for? Try one of:
\link{get_coding_ssm_status},
\link{get_ssm_by_patients},
\link{get_ssm_by_sample},
\link{get_ssm_by_samples},
\link{get_ssm_by_region},
\link{get_ssm_by_regions}
}
\examples{

  #basic usage (defaults to genome seq_type)
  maf_genome = get_coding_ssm()

  nrow(maf_genome)

  dplyr::select(maf_genome,1,4,5,6,9,maf_seq_type)

  maf_exome_hg38 = get_coding_ssm(this_seq_type = "capture",
                                  projection="hg38") 

  dplyr::select(maf_exome_hg38,1,4,5,6,9,maf_seq_type)

}
