% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_ssm_by_regions.R
\name{get_ssm_by_regions}
\alias{get_ssm_by_regions}
\title{Get SSM By Regions.}
\usage{
get_ssm_by_regions(
  regions_list,
  regions_bed,
  these_sample_ids = NULL,
  these_samples_metadata = NULL,
  streamlined = TRUE,
  maf_data = maf_data,
  use_name_column = FALSE,
  from_indexed_flatfile = TRUE,
  mode = "slms-3",
  augmented = TRUE,
  this_seq_type = "genome",
  projection = "grch37",
  min_read_support = 4,
  basic_columns = FALSE,
  verbose = FALSE
)
}
\arguments{
\item{regions_list}{Either provide a vector of regions in the chr:start-end format OR.}

\item{regions_bed}{Better yet, provide a bed file with the coordinates you want to retrieve.}

\item{these_sample_ids}{Optional, a vector of multiple sample_id (or a single sample ID as a string) that you want results for.}

\item{these_samples_metadata}{Optional, a metadata table (with sample IDs in a column) to subset the return to.}

\item{streamlined}{If TRUE (default), only 3 columns will be kept in the maf (start, sample_id and region name).
To return more columns, set this parameter to FALSE, see \code{basic_column} for more info.
Note, if this parameter is TRUE, the function will disregard anything specified with \code{basic_columns}.}

\item{maf_data}{Use an already loaded MAF data frame.}

\item{use_name_column}{If your bed-format data frame has a name column (must be named "name") these can be used to name your regions.}

\item{from_indexed_flatfile}{Set to TRUE to avoid using the database and instead rely on flatfiles (only works for streamlined data, not full MAF details).}

\item{mode}{Only works with indexed flatfiles. Accepts 2 options of "slms-3" and "strelka2" to indicate which variant caller to use. Default is "slms-3".}

\item{augmented}{default: TRUE. Set to FALSE if you instead want the original MAF from each sample for multi-sample patients instead of the augmented MAF}

\item{this_seq_type}{The seq_type you want back, default is genome.}

\item{projection}{Obtain variants projected to this reference (one of grch37 or hg38).}

\item{min_read_support}{Only returns variants with at least this many reads in t_alt_count (for cleaning up augmented MAFs).}

\item{basic_columns}{Parameter to be used when streamlined is FALSE.
Set this parameter to TRUE for returning a maf with standard 45 columns, set to FALSE to keep all 116 maf columns in the returned object.
To return all 116 maf columns, set this parameter to FALSE.}

\item{verbose}{Boolean parameter set to FALSE per default.}
}
\value{
Returns a data frame of variants in MAF-like format.
}
\description{
Efficiently retrieve all mutations across a range of genomic regions.
}
\details{
This function internally calls \link{get_ssm_by_region} to retrieve SSM calls for the specified regions.
See parameter descriptions for \link{get_ssm_by_region} for more information on how the different parameters can be called.
Is this function not what you are looking for? Try one of the following, similar, functions; \link{get_coding_ssm},
\link{get_coding_ssm_status}, \link{get_ssm_by_sample},
\link{get_ssm_by_samples}, \link{get_ssm_by_region}
}
\examples{

regions_bed = GAMBLR.utils::create_bed_data(
   GAMBLR.data::grch37_ashm_regions,
   fix_names = "concat",
   concat_cols = c("gene","region"),sep="-"
) \%>\% head(20)

DLBCL_meta = suppressMessages(get_gambl_metadata()) \%>\% 
                dplyr::filter(pathology=="DLBCL")
ashm_MAF = get_ssm_by_regions(regions_bed = regions_bed,
                             these_samples_metadata = DLBCL_meta,
                             streamlined=FALSE)
ashm_MAF \%>\% dplyr::arrange(Start_Position,Tumor_Sample_Barcode) \%>\%
              dplyr::select(Hugo_Symbol,
                    Tumor_Sample_Barcode,
                    Chromosome,Start_Position,
                    Reference_Allele,
                    Tumor_Seq_Allele2)


}
