% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_cn_states.R
\name{get_cn_states}
\alias{get_cn_states}
\title{Get CN States.}
\usage{
get_cn_states(
  strategy,
  regions,
  seg_data,
  these_samples_metadata,
  n_bins_split = 1000,
  use_cytoband_name = FALSE,
  missing_data_as_diploid = FALSE,
  adjust_for_ploidy = FALSE,
  projection = "grch37"
)
}
\arguments{
\item{strategy}{The general strategy to define regions. Available options are: 'custom_regions','auto_split','cytobands','GISTIC'}

\item{regions}{Required when strategy is set to 'custom_regions'. A data frame in bed-like format or a vector of regions in the format "chrom:start-end"}

\item{seg_data}{A data frame of segments that will be used to infer the copy number state of each region}

\item{these_samples_metadata}{Optional metadata table to auto-subset the data to samples in that table before returning. If missing, the result will include a row for every sample in seg_data.}

\item{n_bins_split}{Split genome into N equally sized bins}

\item{use_cytoband_name}{Use cytoband names instead of region names, e.g p36.33.}

\item{missing_data_as_diploid}{Fill in any sample/region combinations with missing data as diploid (e.g., CN state like 2). Default is FALSE.}

\item{genome_build}{Specify the genome build (usually not required)}
}
\value{
Copy number matrix with sample_id as rows and regions as columns.
}
\description{
Get a copy number matrix for all samples based on segmented data in the database.
}
\details{
This function returns CN states for the specified regions using the CN data from GAMBLR.results and (optionally) assumes regions with no data are diploid.
For how to determine/specify the coordinates of each region, refer to the parameter descriptions and examples.
}
\examples{
#basic usage, generic lymphoma gene list
cn_matrix = get_cn_states(regions_bed=GAMBLR.data::grch37_lymphoma_genes_bed)


}
